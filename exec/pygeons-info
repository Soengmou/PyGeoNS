#!/usr/bin/env python
import argparse
import logging
import numpy as np
from pygeons import *

p = argparse.ArgumentParser(
  usage='%(prog)s STR [options]',
  formatter_class=argparse.RawDescriptionHelpFormatter,
  description=
'''Prints metadata for an HDF5 data file to stdout. 
'''
)

p.add_argument('input_file',**GLOSSARY['input_file'])
p.add_argument('-v','--verbose',**GLOSSARY['verbose'])
p = vars(p.parse_args())

# set logger
verbose = p.pop('verbose')
input_file = p.pop('input_file')
logging.basicConfig(level=30-10*verbose)

data_dict = dict_from_hdf5(input_file)
# put together info string
units = 'meters**%s days**%s' % (data_dict['space_exponent'],
                                 data_dict['time_exponent'])
stations = str(len(data_dict['id']))
times = str(len(data_dict['time']))
time_range = '%s, %s' % (mjd.mjd_inv(data_dict['time'][0],'%Y-%m-%d'),
                         mjd.mjd_inv(data_dict['time'][-1],'%Y-%m-%d'))
lon_range = '%s, %s' % (np.min(data_dict['longitude']),
                        np.max(data_dict['longitude']))
lat_range = '%s, %s' % (np.min(data_dict['latitude']),
                        np.max(data_dict['latitude']))
station_names = ', '.join(data_dict['id']) 
info_string =''' 
units : %s
stations : %s
times : %s
time range : %s
longitude range : %s
latitude range : %s
station names : %s
''' % (units,stations,times,time_range,lon_range,lat_range,station_names)                          
print(info_string)
