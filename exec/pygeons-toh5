#!/usr/bin/env python
import argparse
import pygeons.ioconv
import pygeons.interface
import logging

def change_extension(f,ext):
  return '.'.join(f.split('.')[:-1] + [ext])

p = argparse.ArgumentParser(
  description='''Converts a text data file to a HDF5 file''')

p.add_argument(
  'input_file',type=str,metavar='STR',
  help='''input file name. This must be a text file''')

p.add_argument(
  'file_type',type=str,metavar='STR',
  choices=['pbo_pos','pbo_csv','csv'],
  help='''Input file type''')

p.add_argument(
  '-o','--output_file',type=str,metavar='STR',
  help='''Output file name. If this is not provided then it is the 
          same as the input file name but the extension is removed 
          and replaced with "h5"''')

p.add_argument(
  '-v','--verbose',action='count',default=0,
  help='''controls verbosity''')
               
p = vars(p.parse_args())

# set logger
verbose = p.pop('verbose')
if verbose == 0:
  logging.basicConfig(level=logging.WARNING)
elif verbose == 1:
  logging.basicConfig(level=logging.INFO)
else:
  logging.basicConfig(level=logging.DEBUG)

input_file = p.pop('input_file')
output_file = p.pop('output_file')
file_type = p.pop('file_type')
if output_file is None:
  output_file = change_extension(input_file,'h5')

if file_type == 'csv':
  data_dict = pygeons.ioconv.dict_from_csv(input_file)
elif file_type == 'pbo_csv':
  data_dict = pygeons.ioconv.dict_from_pbocsv(input_file)
elif file_type == 'pbo_pos':
  data_dict = pygeons.ioconv.dict_from_pbopos(input_file)
    
pygeons.ioconv.hdf5_from_dict(output_file,data_dict)
