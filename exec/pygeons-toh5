#!/usr/bin/env python
import argparse
import logging
from pygeons import *

def change_extension(f,ext):
  return '.'.join(f.split('.')[:-1] + [ext])

p = argparse.ArgumentParser(
  formatter_class=argparse.RawDescriptionHelpFormatter,
  description=
''' 
Converts a text data file to an HDF5 file. The text file should 
contain the content of each station file separated by three asterisks, 
***. The station files can have one of three formats: the PBO csv 
format, the PBO pos format, or the PyGeoNS csv format. Indicate the 
file format by specifying either 'pbocsv', 'pbopos', or 'csv' for 
*file_type*. See the README file or www.unavco.org for more 
information on these file formats.

The resulting HDF5 file will contain data entries for each station in 
the text file and for each day ranging from the earliest observation 
to the latest. If data does not exist in the text file for a 
particular station and day then it will be assigned a value of NaN 
with INF uncertainty in the HDF5 file. This indicates that the data is 
missing.

'''
)
p.add_argument('input_text_file',**GLOSSARY['input_text_file'])
p.add_argument('-f','--file_type',**GLOSSARY['file_type'])
p.add_argument('-o','--output_file',**GLOSSARY['output_file'])
p.add_argument('-v','--verbose',**GLOSSARY['verbose'])
p = vars(p.parse_args())

input_file = p.pop('input_text_file')
output_file = p.pop('output_file')
file_type = p.pop('file_type')
verbose = p.pop('verbose')
logging.basicConfig(level=30-10*verbose)

if output_file is None:
  output_file = change_extension(input_file,'h5')

data_dict = dict_from_text(input_file,file_type)
hdf5_from_dict(output_file,data_dict)
