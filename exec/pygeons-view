#!/usr/bin/env python
import argparse
import logging
from pygeons import *

p = argparse.ArgumentParser(
  usage='%(prog)s STR [STR ...] [options]',
  formatter_class=argparse.RawDescriptionHelpFormatter,
  description=
'''Runs the PyGeoNS Interactive Viewer. This function can take multiple 
data files as arguments, which allows for side-by-side comparison of 
datasets.
'''
)
p.add_argument('input_files',**GLOSSARY['input_files'])
p.add_argument('-v','--verbose',**GLOSSARY['verbose'])
p.add_argument('--dataset-labels',**GLOSSARY['dataset_labels'])
p.add_argument('--colors',**GLOSSARY['colors'])
p.add_argument('--line-styles',**GLOSSARY['line_styles'])
p.add_argument('--line-markers',**GLOSSARY['line_markers'])
p.add_argument('--quiver-scale',**GLOSSARY['quiver_scale'])
p.add_argument('--quiver-key-length',**GLOSSARY['quiver_key_length'])
p.add_argument('--quiver-key-pos',**GLOSSARY['quiver_key_pos'])
p.add_argument('--scatter-size',**GLOSSARY['scatter_size'])
p.add_argument('--image-clim',**GLOSSARY['image_clim'])
p.add_argument('--image-cmap',**GLOSSARY['image_cmap'])
p.add_argument('--image-resolution',**GLOSSARY['image_resolution'])
p.add_argument('--ts-title',**GLOSSARY['ts_title'])
p.add_argument('--map-resolution',**GLOSSARY['map_resolution'])
p.add_argument('--map-title',**GLOSSARY['map_title'])
p.add_argument('--map-xlim',**GLOSSARY['map_xlim'])
p.add_argument('--map-ylim',**GLOSSARY['map_ylim'])
p.add_argument('--fontsize',**GLOSSARY['fontsize'])
p.add_argument('--break-lons',**GLOSSARY['break_lons'])
p.add_argument('--break-lats',**GLOSSARY['break_lats'])
p.add_argument('--break-conn',**GLOSSARY['break_conn'])
p = vars(p.parse_args())

verbose = p.pop('verbose')
logging.basicConfig(level=30 - 10*verbose)
input_files = p.pop('input_files')
data_dicts = [dict_from_hdf5(i) for i in input_files]
# throw out any Nones and let the lower level functions determine the defaults
for k in p.keys(): 
  if p[k] is None: 
    p.pop(k)
    
pygeons_view(data_dicts,**p)
