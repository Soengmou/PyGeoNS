#!/usr/bin/env python
import argparse
import logging
from pygeons import *

p = argparse.ArgumentParser(
  formatter_class=argparse.RawDescriptionHelpFormatter,
  description=
''' 
Runs the PyGeoNS Interactive Viewer

'''
)
p.add_argument('input_file',**GLOSSARY['input_file'])
p.add_argument('-v','--verbose',**GLOSSARY['verbose'])
p.add_argument('--data_set_labels',**GLOSSARY['data_set_labels'])
p.add_argument('--color_cycle',**GLOSSARY['color_cycle'])
p.add_argument('--resolution',**GLOSSARY['resolution'])
p.add_argument('--quiver_scale',**GLOSSARY['quiver_scale'])
p.add_argument('--quiver_key_length',**GLOSSARY['quiver_key_length'])
p.add_argument('--quiver_key_pos',**GLOSSARY['quiver_key_pos'])
p.add_argument('--scatter_show',**GLOSSARY['scatter_show'])
p.add_argument('--scatter_size',**GLOSSARY['scatter_size'])
p.add_argument('--image_clim',**GLOSSARY['image_clim'])
p.add_argument('--image_cmap',**GLOSSARY['image_cmap'])
p.add_argument('--image_array_size',**GLOSSARY['image_array_size'])
p.add_argument('--ts_title',**GLOSSARY['ts_title'])
p.add_argument('--map_title',**GLOSSARY['map_title'])
p.add_argument('--map_xlim',**GLOSSARAY['map_xlim'])
p.add_argument('--map_ylim',**GLOSSARY['map_ylim'])
p.add_argument('--fontsize',**GLOSSARY['fontsize'])
p.add_argument('--break_lons',**GLOSSARY['break_lons'])
p.add_argument('--break_lats',**GLOSSARY['break_lats'])
p.add_argument('--break_conn',**GLOSSARY['break_conn'])
p = vars(p.parse_args())

verbose = p.pop('verbose')
logging.basicConfig(level=30 - 10*verbose)
input_files = p.pop('input_files')
data_dicts = [dict_from_hdf5(i) for i in input_files]
# throw out any Nones and let the lower level functions determine the defaults
for k in p.keys(): 
  if p[k] is None: 
    p.pop(k)
    
pygeons_view(data_dicts,**p)
