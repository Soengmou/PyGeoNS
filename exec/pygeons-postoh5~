#!/usr/bin/env python
import argparse
import json
import sys
import os
import pygeons.ioconv
import pygeons.interface
import logging

def change_extension(f,ext):
  return '.'.join(f.split('.')[:-1] + [ext])

p = argparse.ArgumentParser()
p.add_argument('input_file',type=str,
               help='''PBO pos file''')
p.add_argument('--output_file',type=str,
               help='''output date file. If not given then it is the 
                       input file name with a ".h5" extension''') 
p.add_argument('-v','--verbose',action='count',default=0,
               help='''controls verbosity''')
p.add_argument('--perts',type=int,default=20,
               help='''number of perturbations to add''')
               
p = vars(p.parse_args())

# set logger
verbose = p.pop('verbose')
if verbose == 0:
  logging.basicConfig(level=logging.WARNING)
elif verbose == 1:
  logging.basicConfig(level=logging.INFO)
else:
  logging.basicConfig(level=logging.DEBUG)

input_file = p.pop('input_file')
output_file = p.pop('output_file')
if output_file is None:
  output_file = change_extension(input_file,'h5')

# throw out any Nones and let the lower level functions determine the defaults
for k in p.keys():
  if p[k] is None:
    p.pop(k)

data_dict = pygeons.ioconv.dict_from_pos(input_file,**p)
pygeons.ioconv.hdf5_from_dict(output_file,data_dict)
