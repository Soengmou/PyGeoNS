#!/usr/bin/env python
import argparse
import logging
from pygeons import *

def change_extension(f,ext):
  return '.'.join(f.split('.')[:-1] + [ext])

p = argparse.ArgumentParser(
  formatter_class=argparse.RawDescriptionHelpFormatter,
  description=
''' 
Converts an HDF5 data file to a PyGeoNS csv file. If a station is 
missing data for each component, north, east, and vertical, for a 
particular day, then that day will not be written to the text file. If 
all the data for a station is missing then that station will not be in 
the resulting text file.

'''
)

p.add_argument('input_file',**GLOSSARY['input_file'])
p.add_argument('-o','--output_file',**GLOSSARY['output_file'])
p.add_argument('-v','--verbose',**GLOSSARY['verbose'])
p = vars(p.parse_args())

# set logger
verbose = p.pop('verbose')
input_file = p.pop('input_file')
output_file = p.pop('output_file')
logging.basicConfig(level=30-10*verbose)
if output_file is None:
  output_file = change_extension(input_file,'csv')

data_dict = dict_from_hdf5(input_file)
text_from_dict(output_file,data_dict)
